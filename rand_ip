#!/bin/bash

#********************************#
#                                #
#    Written by Andras Marton    #
#         August 30, 2019        #
#                                #
#********************************#

# Random IP and CIDR subnet mask generator
# v1.2

# defined positional parameter as global variable
# to be read in generate_ip() function
read_number="$2"

# help menu
usage() {
  echo "Usage: rand_ip [OPTIONS]..."
  echo "-n, --number      define the number of IPs to generate"
  echo "-h, --help        display usage information"
}

# algorithm for generating random IP and subnet mask
generate_ip() {
  for i in $(eval echo {1..$read_number}); do
    subnetmask=$((RANDOM%16+15))
    ip=$(printf "%d.%d.%d.%d" "$((RANDOM % 256))" \
      "$((RANDOM % 256))" "$((RANDOM % 256))" \
      "$((RANDOM % 256))")
      echo $ip"/"$subnetmask
  done
}

case $1 in
            -n | --number )
                 # Check that input following -n is a number
                 chk_number='^[0-9]+$'
                 if ! [[ $read_number =~ $chk_number ]] ; then
                   usage
                 else 
                   generate_ip
                 fi
                 ;;
            -h | --help ) usage
                 ;;
             * ) usage
                 ;;
esac
